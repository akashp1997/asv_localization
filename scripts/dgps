#!/usr/bin/env python

import rospy

epsilon = 0.01

import sensor_msgs.msg

base_fix = sensor_msgs.msg.NavSatFix()
#Change the type to Twist Stamped for real testing

pub_base_fix = rospy.Publisher("/fix", sensor_msgs.msg.NavSatFix, queue_size=10)

def listener():
	rospy.init_node("dgps")
	rospy.Subscriber("/base_fix", sensor_msgs.msg.NavSatFix, callback, callback_args=False)
	rospy.Subscriber("/boat_fix", sensor_msgs.msg.NavSatFix, callback, callback_args=True)
	rospy.spin()

def callback(data, flag):
	global base_fix
	if flag:
		data.latitude -= base_fix.latitude
		data.longitude -= base_fix.longitude
		data.altitude -= base_fix.altitude
		data.status.status = 2
		data.position_covariance_type = 3
		data.position_covariance = [data.position_covariance[i]-base_fix.position_covariance[i] for i in range(len(base_fix.position_covariance))]
		#rospy.loginfo(data.position_covariance)
		pub_base_fix.publish(data)
	else:
		base_fix = data


listener()